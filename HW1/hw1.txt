Kangcheng Li
HW1
----------

Question 1:
----------

[2]> (PAD 0)
1
[3]> (PAD 1)
1
[4]> (PAD 2)
1
[5]> (PAD 3)
2
[6]> (PAD 4)
2
[7]> (PAD 5)
3
[8]> (PAD 6)
4
[9]> (PAD 7)
5
[10]> (PAD 8)
7
[11]> (PAD 9)
9
[12]> (PAD 10)
12

Testing PAD on larger values causes extremely slow performance.
This is because this lisp function runs recursively by calculating every number less than the number n. This results in a large amount of increase in the number of calculations as N gets larger. 




Question 2:
---------

[13]> (SUMS 0)
0
[14]> (SUMS 1)
0
[15]> (SUMS 2)
0
[16]> (SUMS 3)
1
[17]> (SUMS 4)
1
[18]> (SUMS 5)
2
[19]> (SUMS 6)
3
[20]> (SUMS 7)
4
[21]> (SUMS 8)
6
[22]> (SUMS 9)
8
[23]> (SUMS 10)
11

(SUMS n) always equals to (PAD n) - 1
This is because the PAD function is fundamentally calculating the addition of 1's. In this sense, for PAD to return 12, there would be 11 additions which is what we saw in (PAD 10) and (SUMS 10)




Question 3:
----------

[24]> (ANON '42)
?
[25]> (ANON 'FOO)
?
[26]> (ANON '(((L E) F) T))
(((? ?) ?) ?)
[27]> (ANON '(5 FOO 3.1 -0.2))
(? ? ? ?)
[28]> (ANON '(1 (FOO 3.1) -0.2))
(? (? ?) ?)
[29]> (ANON '(((1 2) (FOO 3.1)) (BAR -0.2)))
(((? ?) (? ?)) (? ?))
[30]> (ANON '(R (I (G (H T)))))
(? (? (? (? ?))))


